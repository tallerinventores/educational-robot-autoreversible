/* {{{ %%SECTION_HEADER%%
 * * * *
 * This header information is automatically generated by KodeUtils.
 *
 * File 'educational-robot-autoreversible.scad' edited by kwendenarmo,
 * last modified: 2016-07-03.
 * This file is part of 'educational-robot-autoreversible' package, please see
 * the readme files for more information about this file and this package.
 *
 * Copyright (C) 2016 by kwendenarmo <kwendenarmo@akornsys-rdi.net>
 * Released under the GNU GPLv3
 *
 *    This program is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    This program is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * * * *
 * %%EOS_HEADER%% }}}
 */

$fn=360;

/*
 *  Tornillos
 *  -   Sensor 1x 3x10 plastico
 *  -   Motor 4x M3x20 hex
 *  -   Cierre chasis 8x M3x30 + 1 arandela plana
 *  -   Cierre chasis interior 4x M3x25
 */

chasis_lateral();
translate([-25.5,0,0]) chasis_central(1);
translate([-30.5,0,0]) mirror() chasis_central();
translate([-56,0,0]) mirror() chasis_lateral();
translate([30,-60,29]) rotate([0,-90,0]) pala();
translate([30,60,29]) rotate([0,-90,0]) pala();
translate([-77,-60,29]) rotate([0,-90,0]) pala();
translate([-77,60,29]) rotate([0,-90,0]) pala();

module chasis_lateral() {
    difference() {
        //chasis
        union() {
            hull() {
                translate([0, -60, 29]) rotate([270, 270, 270]) cylinder(r=29, h=20);
                translate([0, 60, 29]) rotate([270, 0, 270]) cylinder(r=29, h=20);
            }
            translate([-5.5,60,29]) rotate([75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=5.5);
            translate([-5.5,60,29]) rotate([-75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=5.5);
            translate([-5.5,-60,29]) rotate([105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=5.5);
            translate([-5.5,-60,29]) rotate([-105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=5.5);
        }
        union() {
            //chasis interior
            difference() {
                hull() {
                    translate([-1, -60, 29]) rotate([270, 270, 270]) cylinder(r=27, h=19);
                    translate([-1, 60, 29]) rotate([270, 0, 270]) cylinder(r=27, h=19);
                }
                //soportes motor delantero
                difference() {
                    union() {
                        translate([19,-71.5,21.5]) hull() {
                            cube([1,23,2]);
                            translate([-19,0,1]) cube([1,23,2]);
                        }
                        translate([19,-71.5,34.5]) hull() {
                            cube([1,23,2]);
                            translate([-19,0,-1]) cube([1,23,2]);
                        }
                    }
                    union() {
                        translate([5,-69,20.5]) cylinder(r=1.75, h=17);
                        translate([5,-51,20.5]) cylinder(r=1.75, h=17);
                    }
                }
                //soportes motor trasero
                difference() {
                    union() {
                        translate([19,48.5,21.5]) hull() {
                            cube([1,23,2]);
                            translate([-19,0,1]) cube([1,23,2]);
                        }
                        translate([19,48.5,34.5]) hull() {
                            cube([1,23,2]);
                            translate([-19,0,-1]) cube([1,23,2]);
                        }
                    }
                    union() {
                        translate([5,51,20.5]) cylinder(r=1.75, h=17);
                        translate([5,69,20.5]) cylinder(r=1.75, h=17);
                    }
                }
                //taladros de montaje
                union() {
                    translate([-2,60,29]) rotate([75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=22);
                    translate([-2,60,29]) rotate([-75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=22);
                    translate([-2,-60,29]) rotate([105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=22);
                    translate([-2,-60,29]) rotate([-105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=22);
                }
            }
            //motores
            union() {
                translate([17, -60, 29]) rotate([0,90,0]) cylinder(r=2.25, h=4);     //motor delantero
                translate([17, -66.5, 23.5]) cube([2, 13, 11]);     //rebaje motor delantero
                translate([17, 60, 29]) rotate([0,90,0]) cylinder(r=2.25, h=4);      //motor trasero
                translate([17, 53.5, 23.5]) cube([2, 13, 11]);      //rebaje motor trasero
            }
            //agujero de montaje
            union() {
                translate([5,60,29]) rotate([75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=3.75, h=16);
                translate([5,60,29]) rotate([-75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=3.75, h=16);
                translate([5,-60,29]) rotate([105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=3.75, h=16);
                translate([5,-60,29]) rotate([-105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=3.75, h=16);
                translate([-6,60,29]) rotate([75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=13);
                translate([-6,60,29]) rotate([-75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=13);
                translate([-6,-60,29]) rotate([105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=13);
                translate([-6,-60,29]) rotate([-105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=13);
            }
        }
    }
}

module chasis_central(sensor) {
    difference() {
        //chasis
        union() {
            hull() {
                translate([0, -60, 29]) rotate([270, 270, 270]) cylinder(r=29, h=20);
                translate([0, 60, 29]) rotate([270, 0, 270]) cylinder(r=29, h=20);
            }
            translate([-2.5,-4,2]) cube([3.5,8,8]);
            translate([-2.5,-4,48]) cube([3.5,8,8]);
            translate([-2.5,79,25]) cube([3.5,9,8]);
            translate([-2.5,-88,25]) cube([3.5,9,8]);
        }
        union() {
            //chasis interior
            difference() {
                hull() {
                    translate([-1, -60, 29]) rotate([270, 270, 270]) cylinder(r=27, h=22);
                    translate([-1, 60, 29]) rotate([270, 0, 270]) cylinder(r=27, h=22);
                }
                //taladros de montaje
                union() {
                    translate([10,60,29]) rotate([75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=10);
                    translate([10,60,29]) rotate([-75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=10);
                    translate([10,-60,29]) rotate([105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=10);
                    translate([10,-60,29]) rotate([-105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=5, h=10);
                }
                union() {
                    translate([-1,-4,2]) hull() {
                        cube([2,8,8]);
                        translate([20,0,0]) cube([1,8,1]);
                    }
                    translate([-1,-4,48]) hull() {
                        cube([2,8,8]);
                        translate([20,0,7]) cube([1,8,1]);
                    }
                    translate([-1,79,25]) hull() {
                        cube([2,9,8]);
                        translate([20,7,0]) cube([1,2,8]);
                    }
                    translate([-1,-88,25]) hull() {
                        cube([2,9,8]);
                        translate([20,0,0]) cube([1,2,8]);
                    }
                }
                //sensor
                if (sensor) {
                    translate([5, -36.3, 47.5]) hull() {    //soporte
                        cube([9, 9, 9]);
                        translate([14,0,8]) cube([1, 9, 1]);
                    }
                    translate([0, -15, 47.5]) cube([20, 10, 20]);  //caperuza
                }
            }
            //agujero de montaje
            union() {
                translate([9,60,29]) rotate([75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=12);
                translate([9,60,29]) rotate([-75,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=12);
                translate([9,-60,29]) rotate([105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=12);
                translate([9,-60,29]) rotate([-105,0,0]) translate([0,22.5,0]) rotate([0,90,0]) cylinder(r=1.25, h=12);
            }
            union() {
                translate([-1,0,6.5]) rotate([0,90,0]) cylinder(r=1.25, h=22);
                translate([-1,0,51.5]) rotate([0,90,0]) cylinder(r=1.25, h=22);
                translate([-1,82.5,29]) rotate([0,90,0]) cylinder(r=1.25, h=22);
                translate([-1,-82.5,29]) rotate([0,90,0]) cylinder(r=1.25, h=22);
                translate([9,0,6.5]) rotate([0,90,0]) cylinder(r=3, h=12);
                translate([9,0,51.5]) rotate([0,90,0]) cylinder(r=3, h=12);
                translate([9,82.5,29]) rotate([0,90,0]) cylinder(r=3, h=12);
                translate([9,-82.5,29]) rotate([0,90,0]) cylinder(r=3, h=12);
            }
            //sensor
            if (sensor) {
                translate([4.4, -13.5, 47]) cube([11.2, 6.7, 12]);   //apertura
                translate([10, -31.8, 47]) cylinder(r=1.25, h=7);   //montaje
            }
        }
    }
    if (sensor) {
        translate([3,-7,46]) rotate([0,0,-90]) tcrt5000();
    }
}

module pala() {
    //eje
    rotate([0,0,-15]) difference() {
        union() {
            cylinder(r=4.5, h=9);
            hull() {
                translate([-0.5,0,0]) cube([1,4.5,9]);
                translate([0,0,4.5]) rotate([-90,0,0]) cylinder(r=2.5, h=6);
            }
        }
        union() {
            translate([0,0,-1]) cylinder(r=1.5, h=11);
            translate([0, 7, 4.5]) rotate([90, 0, 0]) cylinder(r=1.25, h=14);
        }
    }
    //pala
    translate([-20.5,0,0]) difference(){
        cylinder(r=25, h=9);
        union() {
            translate([0, 0, -1]) cylinder(r=22, h=11);
            translate([-26, 0, -1]) cube([52,26,11]);
        }
    }
}

module tcrt5000() {
    difference() {
        union() {
            cube([32.3,14,1.2]);
            translate([0.3,1.9,1.2]) cube([5.7,10.2,8.3]);
            translate([3.15,9,9.7]) sphere(1.5);
            translate([3.15,5,9.7]) sphere(1.5);
        }
        translate([24.8,7,-1]) cylinder(r=1.5, h=3);
    }
}